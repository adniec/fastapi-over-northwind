version: '3.1'

services:
  reports_service:
    image: reports-service
    build: ./reports-service
    container_name: reports
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./reports-service/:/app/
      - ./common/__init__.py:/app/app/api/__init__.py
      - ./common/auth.py:/app/app/api/auth.py
    ports:
      - 8001:8000
    secrets:
      - db_uri
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000/api/auth/basic
      - DATABASE_URI=/run/secrets/db_uri
    depends_on:
      - auth_service
      - db
    deploy:
      replicas: 3
      update_config:
        parallelism: 3
      restart_policy:
        condition: on-failure

  categories_service:
    image: categories-service
    build: ./categories-service
    container_name: categories
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./categories-service/:/app/
      - ./common/__init__.py:/app/app/api/__init__.py
      - ./common/auth.py:/app/app/api/auth.py
    ports:
      - 8002:8000
    secrets:
      - db_uri
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000/api/auth/basic
      - DATABASE_URI=/run/secrets/db_uri
    depends_on:
      - auth_service
      - db
    deploy:
      replicas: 3
      update_config:
        parallelism: 3
      restart_policy:
        condition: on-failure

  auth_service:
    image: auth-service
    build: ./auth-service
    container_name: auth
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./auth-service/:/app/
    ports:
      - 8003:8000
    secrets:
      - login
      - password
    environment:
      - LOGIN=/run/secrets/login
      - PASSWORD=/run/secrets/password
    depends_on:
      - db
    deploy:
      replicas: 3
      update_config:
        parallelism: 3
      restart_policy:
        condition: on-failure

  products_service:
    image: products-service
    build: ./products-service
    container_name: products
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./products-service/:/app/
      - ./common/__init__.py:/app/app/api/__init__.py
      - ./common/auth.py:/app/app/api/auth.py
    ports:
      - 8004:8000
    secrets:
      - db_uri
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000/api/auth/basic
      - DATABASE_URI=/run/secrets/db_uri
    depends_on:
      - auth_service
      - db
    deploy:
      replicas: 3
      update_config:
        parallelism: 3
      restart_policy:
        condition: on-failure

  orders_service:
    image: orders-service
    build: ./orders-service
    container_name: orders
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./orders-service/:/app/
      - ./common/__init__.py:/app/app/api/__init__.py
      - ./common/auth.py:/app/app/api/auth.py
    ports:
      - 8005:8000
    secrets:
      - db_uri
      - paypal_client
      - paypal_secret
    environment:
      - AUTH_SERVICE_URL=http://auth_service:8000/api/auth/basic
      - DATABASE_URI=/run/secrets/db_uri
      - PAYPAL_CLIENT=/run/secrets/paypal_client
      - PAYPAL_SECRET=/run/secrets/paypal_secret
    depends_on:
      - auth_service
      - db
    deploy:
      replicas: 3
      update_config:
        parallelism: 3
      restart_policy:
        condition: on-failure

  db:
    image: postgres:12
    container_name: db
    secrets:
      - login
      - password
    environment:
      POSTGRES_DB: northwind
      POSTGRES_USER_FILE: /run/secrets/login
      POSTGRES_PASSWORD_FILE: /run/secrets/password
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
    deploy:
      placement:
        constraints: [node.role == manager]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - cadvisor
    deploy:
      placement:
        constraints: [node.role == manager]

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9001:9093
    volumes:
      - ./prometheus:/etc/alertmanager
    depends_on:
      - prometheus
    deploy:
      placement:
        constraints: [node.role == manager]

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 9002:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/
    secrets:
      - login
      - password
    environment:
      - GF_SECURITY_ADMIN_USER__FILE=/run/secrets/login
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/password
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    depends_on:
      - prometheus
    deploy:
      placement:
        constraints: [node.role == manager]

  cadvisor:
    image: gcr.io/google-containers/cadvisor
    container_name: cadvisor
    ports:
    - 9003:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - nginx
    deploy:
      placement:
        constraints: [node.role == manager]

  node_exporter:
    image: prom/node-exporter
    container_name: node-exporter
    ports:
      - 9004:9100
    depends_on:
      - prometheus
    deploy:
      placement:
        constraints: [node.role == manager]

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth_service
      - categories_service
      - products_service
      - orders_service
      - reports_service
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  prometheus_data:
  grafana_data:

secrets:
  db_uri:
    file: ./secrets/db_uri.txt
  login:
    file: ./secrets/login.txt
  password:
    file: ./secrets/password.txt
  paypal_client:
    file: ./secrets/paypal_client.txt
  paypal_secret:
    file: ./secrets/paypal_secret.txt
